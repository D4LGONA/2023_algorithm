그리디 알고리즘 : 최적화 문제(가능한 해들 중에서 가장 좋은 해(최대/최소)를 찾는 문제)를 해결하는 알고리즘
입력 데이터간의 관계를 고려하지 않고 수행 과정에서 '욕심내어' 최소값 또는 최대값을 가진 데이터를 선택
일단 한번 선택하면 이를 번복하지 않음

4.1 동전 거스름돈 - 코드로 쓸 수 있어야 함 한번씰 만들어 보세요
무조건 가장 높은 액면의 동전을 거스름(다른 녀석들은 신경쓰지 않음)
정수배?로 이루어지지 않았으면 그리디 방식으로 풀 수 없음(160원을 추가하는 경우...)

4.2 최소 신장 트리 : 주어진 가중치 그래프에서 사이클이 없이 모든 점을 연결시킨 트리들 중 간선들의 가중치 합이 최소인 트리
minimum spanning(스판... 뭐 그런거 라는 데요) tree
그래프... 에 대한 설명 트리...
edge list를 사용한다고 하는데요
adjacency matrix : n*n 행렬, 직접 연결돼있으면 그 위치에 1로 표현 -> 비용을 어떻게 표현하지 ㅠㅠ
adjacency list: 1번이 연결된거 2, 3, 4 / 2번이 연결된거 1 -> 요런 식으로... set을 이용하면 좋겠다 라고 하시네요
 -> 하지만 set을 쓰면 비용을 못써서 딕셔너리를 사용한다구.. 이차원 딕셔너리 네요
edge list: 1,2가 연결돼있으면 [(1, 2), (2, 3)] 이런 식, 데이터 중복이 없어서 메모리 사용이 적다는 장점
그러나 운용? 하기 가 힘 듦
cycle이 있는 그래프는 트리가 아님
합집합 찾기? 해당 위치이의 숫자가 그녀석의 루트 라네요
1 2 3 4 5 6 7 8 에서 1고ㅏ 2 연결
1 1 3 4 5 6 7 8 에서 2에 3 연결
1 1 1 4 5 6 7 8 
루트가 같은 애를 연결하면 트리가 아니게 됨
==
최소신장트리: 그래프에서 모든 정점을 연결시킨 트리 중 가중치의 합이 최소인 녀석
크루스컬 알고리즘: n개의 점 있을때 n-1개 지으면 끝 가중치 적은거부터 하나하나 집는것 근데 걔 집으면 사이클 생기는 애는 버림
프림 알고리즘: 시작점을 고릅니다 그리고 가장 가중치가 작은 녀석을 가요 그러면 두 점에 연결된 모든 간선중에 가장 가중치가 작은 녀석을 고릅니다 - 반복이에요
 -> 다익스트라랑 비슷하다고 하네요

4.3 최단 경로 찾기


4.4 부분 배낭 문제


4.5 집합 커버 문제


4.6 작업 스케줄링


4.7 허프만 압축