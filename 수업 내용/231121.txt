np complete

np 문제 집합 안에 p 문제와 np-complete 문제가 있음, np-하드는 np문제가 아닐 수도 있음. np-complete는 np-하드임(추측)

p(polynormal) 문제: 다항식 시간 안에 풀 수 있는 문제. 시간 복잡도가 n, logn, nlogn, n^2, n^3 ...
np-complete 문제: 지수시간 안에 풀 수 있는 문제. 문제끼리 변환이 가능함?
특성(가설) - 어느 하나의 np-complete 문제에 대해 다항식 시간의 알고리즘을 찾아내면 모든 다른 np-complete 문제도 다항식 시간에 해를 찾을 수 있다.

np 문제: 해를 다항식 시간에 확인하는 알고리즘 ?

np 알고리ㅡ즘은 추츳한 해를 확인하여 맞다/아니다로 대답 -> 그렇게 답이 나오도록 문제를 변환해야. 이 유형을 결정 문제라고 함.

- 여행자 문제(TSP): 각 도시를 1번씩만 방문하고 시작 도시로 돌아오는 최단거리를 찾는 문제.
얘를 각 도시를 1번씩만 방문하고 시작 도시로 돌아오는 거리가 k 보다 짧냐? 의 결정문제로 변환
선형시간이 걸린다네요 이 결정 문제는

np-complete문제의 특성을 알기 위해 어떤 문제를 다른 문제로 변환(reduction)
여기서 변환은 문제 a를 해결하기 위해 문제 b를 해결하는 알고리즘을 적용하는 것

ex>
문제 A = subset sum
문제 B = Partition
전체 합에서 구하는녀석*2를 빼서 남은 값을 원소로 추가해서 답구한다음에 걔를다시빼는것...
A를 푸는데 B문제 시간복잡도가 중요? 이녀석이 A문제의 시간복잡도가 됨?

추이관계? 변환하는덴 다항색 시간이라 변환된녀석의 알고리즘 시간복잡도만 중요함
그래서 하나의 np-complete만 해결돼도 다 해결되는 것임(내일 날씨도 알고.. 어저구)

np-hard: 어려운 녀석

SAT: 논리식을 참으로 만드는 값들...
partition
0-1Knapsack
Vertex Cover: cctv로 생각하면 됨
etc ....

그림만 이해하도록





