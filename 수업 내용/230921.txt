정렬 알고리즘 구현하는 시간을 가지자고 하네요...
모듈...
모듈을 만들때는 무조건 함수로 만듦
__name__ => 나의 모듈이름이 뭔지 확인하는것?
__name__ == '__main__' 일케하면 모듈로 호출돼쓸때 실행되지 않음
randint() 시드 초기화 없어도 랜덤으로 나옴
seed()라는 함수로 시드를 설정해주면 항상 같은 값을 뱉음

버블정렬
반복문 두개, 인접한 두개를 비교해서 바꿔야 하면 바꾸는거
인덱스를 어디부터 어디까지?

Dummy 클래스 ???
존재하지 않는걸 호출했을때 처리하는걸 구현할 수 있음?

버블정렬 개선
일정부분 이후로 끝날때까지 교체가 일어나지 않으면 다음 사이클에서 그 부분 전까지만 돔.

선택정렬 반복문 두개
최소찾고 -> 교환 -> 계속반복
최솟값의 다음것부터 탐색 ㄱㄱ

삽입정렬 반복문 두개
주인공 선택 루프->반드시 1부터 시작/주인공 보내기 루프
1번 개선: 교체하지 않아도 되면 남은 비교도 할 필요가 없군
2번 개선: 뒤로 밀기만 하기

셸 정렬 4중루프에서 3중루프로 개선
3번 : 주인공 바꾸기, 4번 : 주인공 어디까지 이동할지
1번 : 갭 줄이기, 2번 : 서브어레이를 도는... 거?
얘를 개선하면 2번과 3번을 합쳐
1: 갭줄이는ㄷ애, 2: 갭부터 끝까지 줄이는애. 3: 어디까지이동할지
갭은 length/3 + 1으로 하고 반으로 줄이면서 가는 듯 아니네 3으로 나누래

성능분석
time 모듈을 import합니다. 정렬 전후에 time()을 호출해서 뒤에서 앞에를 빼요
float의 초 단위
비쥬얼라이저를 끄고 재야 함
2만개일 때,
버블정렬 39.334
선택정렬 8.258 (무작위 값에서도 항상 같은 성능, 무작위일때 n^2알고리즘중 가장 빠름. 교환횟수가 최소이기 때문)
삽입정렬 20.232 (정렬에 가까우면 성능 향상)
셸 정렬



